swagger: "2.0"
info:
  version: "0.0.1"
  title: Hello World App
# during dev, should point to your local machine
host: localhost:3000
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /hello:
    # binds a127 app logic to a route
    x-swagger-router-controller: hello_world
    get:
      description: Returns 'Hello' to the caller
      # used as the method name of the controller
      operationId: hello
      parameters:
        - name: name
          in: query
          description: The name of the person to whom to say hello
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /games:
    # binds a127 app logic to a route
    x-swagger-router-controller: game
    get:
      description: Returns the games list stored inside db.
      # used as the method name of the controller
      operationId: getGames
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/Games"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"          
    post:
      description: Create a new game and store it inside db.
      # used as the method name of the controller
      operationId: newGame
      parameters:
        - name: Game
          in: body
          required: true
          schema:
            $ref: "#/definitions/Game"
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/Game"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /games/{id}:
    # binds a127 app logic to a route
    x-swagger-router-controller: game
    get:
      description: Returns the information of a specific game.
      # used as the method name of the controller
      operationId: getOneGame
      parameters:
        - name: id
          in: path
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/Game"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"          
    put:
      description: Returns the information of a specific game.
      # used as the method name of the controller
      operationId: updateGameInfo
      parameters:
        - name: id
          in: path
          required: true
          type: string
        - name: Game
          in: body
          required: true
          schema:
            $ref: "#/definitions/Game"
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/Game"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"                  
  /swagger:
    x-swagger-pipe: swagger_raw          
# complex objects have schema definitions
definitions:
  Games:
    description: Containing an array of Game item.
    type: array
    items:
      $ref: '#/definitions/Game'
  Game:
    description: Describing the data model of a Game.
    properties:
      name:
        description: The name of the Game
        type:
          string
      state:
        description: The current game's state.
        type: string
      firstPlayerIsNext:
        description: Indicating whether the 1st player is the next one.
        type: boolean
      players:
        description: Store the list of players.
        type: array
        items:
          type: string
      moves:
        description: Store the moves of game.
        type: array
        items:
          type: string
  HelloWorldResponse:
    required:
      - message
    properties:
      message:
        type: string
  ErrorResponse:
    properties:
      message:
        type: string
